{
  "_args": [
    [
      {
        "raw": "file:///Users/adarshpastakia/Workspace/SigmaFrameworks/sigma-ui-framework",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "file:///Users/adarshpastakia/Workspace/SigmaFrameworks/sigma-ui-framework",
        "spec": "/Users/adarshpastakia/Workspace/SigmaFrameworks/sigma-ui-framework",
        "type": "directory"
      },
      "/Users/adarshpastakia/Workspace/SigmaFrameworks/ui-framework-kitchensink"
    ]
  ],
  "_from": "../sigma-ui-framework",
  "_id": "sigma-ui-framework@1.0.0-beta.23",
  "_inCache": true,
  "_installable": true,
  "_location": "/sigma-ui-framework",
  "_phantomChildren": {},
  "_requested": {
    "raw": "file:///Users/adarshpastakia/Workspace/SigmaFrameworks/sigma-ui-framework",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "file:///Users/adarshpastakia/Workspace/SigmaFrameworks/sigma-ui-framework",
    "spec": "/Users/adarshpastakia/Workspace/SigmaFrameworks/sigma-ui-framework",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "file:../sigma-ui-framework",
  "_shasum": "0cf03d08da005ce87d0dde375e0cde535fbabe82",
  "_shrinkwrap": null,
  "_spec": "file:///Users/adarshpastakia/Workspace/SigmaFrameworks/sigma-ui-framework",
  "_where": "/Users/adarshpastakia/Workspace/SigmaFrameworks/ui-framework-kitchensink",
  "author": {
    "name": "Adarsh Pastakia",
    "email": "adarshpastakia@outlook.com",
    "url": "http://adarshpastakia.github.io/"
  },
  "bugs": {
    "url": "https://github.com/sigmaframeworks/sigma-ui-framework/issues"
  },
  "dependencies": {
    "amcharts": "^3.14.5",
    "aurelia-bootstrapper": "^1.0.0",
    "aurelia-event-aggregator": "^1.0.0",
    "aurelia-fetch-client": "^1.0.0",
    "aurelia-framework": "^1.0.0",
    "aurelia-logging": "^1.0.0",
    "aurelia-metadata": "^1.0.0",
    "aurelia-router": "^1.0.0",
    "aurelia-templating-resources": "^1.0.0",
    "aurelia-validatejs": "^0.7.0",
    "aurelia-validation": "^0.11.0",
    "fabric": "^1.6.3",
    "kramed": "^0.5.6",
    "lodash": "^4.5.1",
    "moment": "^2.14.1",
    "numeral": "^1.5.3",
    "whatwg-fetch": "^1.0.0"
  },
  "description": "A bespoke UI Framework for building desktop business applications",
  "devDependencies": {
    "aurelia-tools": "^0.2.4",
    "babel-core": "^6.11.4",
    "babel-dts-generator": "^0.6.1",
    "babel-eslint": "^6.1.2",
    "babel-plugin-syntax-flow": "^6.8.0",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-es2015-modules-amd": "^6.8.0",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.11.5",
    "babel-plugin-transform-es2015-modules-systemjs": "^6.11.6",
    "babel-plugin-transform-flow-strip-types": "^6.8.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-es2015-loose": "^7.0.0",
    "babel-preset-es2015-loose-native-modules": "^1.0.0",
    "babel-preset-stage-1": "^6.5.0",
    "browser-sync": "^2.13.0",
    "del": "^2.2.1",
    "dts-bundle": "^0.5.0",
    "gulp": "github:gulpjs/gulp#4.0",
    "gulp-babel": "^6.1.2",
    "gulp-bump": "^2.2.0",
    "gulp-compass": "^2.1.0",
    "gulp-concat": "^2.6.0",
    "gulp-conventional-changelog": "^1.1.0",
    "gulp-eslint": "^3.0.1",
    "gulp-ignore": "^2.0.1",
    "gulp-insert": "^0.5.0",
    "gulp-plumber": "^1.0.1",
    "gulp-rename": "^1.2.2",
    "gulp-typedoc": "^2.0.0",
    "gulp-typedoc-extractor": "0.0.8",
    "gulp-typescript": "^2.13.6",
    "gulp-util": "^3.0.7",
    "gulp-yuidoc": "^0.1.2",
    "merge2": "^1.0.2",
    "object.assign": "^4.0.4",
    "require-dir": "^0.3.0",
    "run-sequence": "^1.2.2",
    "through2": "^2.0.1",
    "typedoc": "^0.4.4",
    "typescript": ">=1.9.0-dev || ^2.0.0",
    "vinyl": "^1.1.1",
    "vinyl-paths": "^2.1.0",
    "yargs": "^4.8.1"
  },
  "gitHead": "3d7ecbf3a26b554a0ac99cbe1ef402eee80ba348",
  "homepage": "http://sigmaframeworks.io",
  "jspm": {
    "registry": "npm",
    "jspmPackage": true,
    "main": "sigma-ui-framework",
    "format": "amd",
    "directories": {
      "dist": "dist/"
    },
    "peerDependencies": {
      "aurelia-framework": "^1.0.0",
      "aurelia-bootstrapper": "^1.0.0",
      "aurelia-logging": "^1.0.0",
      "aurelia-router": "^1.0.0",
      "aurelia-metadata": "^1.0.0",
      "aurelia-fetch-client": "^1.0.0",
      "aurelia-event-aggregator": "^1.0.0",
      "aurelia-templating-resources": "^1.0.0",
      "aurelia-validation": "^0.11.0",
      "aurelia-validatejs": "^0.7.0"
    },
    "dependencies": {
      "amcharts": "github:amcharts/amcharts3@^3.20.9",
      "kramed": "github:GitbookIO/kramed@^0.5.6",
      "fabric": "^1.6.3",
      "fetch": "^0.11.0",
      "lodash": "^4.5.1",
      "moment": "^2.11.2",
      "numeral": "^1.5.3",
      "css": "^0.1.23",
      "text": "^0.0.4"
    },
    "devDependencies": {
      "aurelia-pal": "^1.0.0-rc.1.0.0",
      "aurelia-pal-browser": "^1.0.0-rc.1.0.0",
      "babel": "babel-core@^5.8.24",
      "babel-runtime": "^5.8.24",
      "core-js": "^1.1.4",
      "typescript": "^1.6.2"
    }
  },
  "keywords": [
    "ui-framework",
    "desktop-framework",
    "aurelia-ui-framework"
  ],
  "license": "MIT",
  "main": "dist/sigma-ui-framework.js",
  "name": "sigma-ui-framework",
  "optionalDependencies": {},
  "readme": "> ### Sigma UI Framework\n> A bespoke UI Framework for building desktop business applications\n\n----\n\n##### Getting Started\n\n> Before staring setup a project using the [ui-skeleton](//github.com/sigmaframeworks/sigma-ui-skeleton).\n\n\n* `src/main.ts` Main aurelia entry point\n\n```ts\nexport function configure(aurelia) {\n  aurelia.use\n    .plugin('aurelia-validation')\n    .plugin('aurelia-validatejs')\n    .plugin('sigma-ui-framework', function(config) {\n      config\n        .title(string)\n        .version(string)\n        .appKey(string)\n\n        .apiUrl(url)\n        .apiHeaders(object)\n        // Send authorization header with every request\n        .addAuthHeader(bool)\n\n        .loadCharts()\n        .languages(array<{id, name}>)\n    });\n\n  aurelia.start()\n  \t.then(() => aurelia.setRoot())\n  \t.then(() => {\n  \t\tvar splash = window.document.querySelector('.ui-splash');\n  \t\tsplash.classList.add('animate');\n  \t\tsetTimeout(() => {\n  \t\t\tsplash.parentElement.removeChild(splash);\n  \t\t}, 1000);\n  \t})\n  \t.catch(e => {\n  \t\tconsole.log(e);\n  \t});\n}\n```\n\n* To use internationalization\n\n  ```bash\n  npm install aurelia-i18n i18next-xhr-backend --save\n  ```\n\n  Add the following to `function configure` in `main.ts`\n  ```ts\n  import {I18N} from 'aurelia-i18n';\n  import * as Backend from 'i18next-xhr-backend'; // <-- your previously installed backend plugin\n\n  aurelia.use\n  .plugin('aurelia-i18n', (instance) => {\n        // register backend plugin\n        instance.i18next.use(Backend);\n\n        // adapt options to your needs (see http://i18next.com/docs/options/)\n        // make sure to return the promise of the setup method, in order to guarantee proper loading\n        return instance.setup({\n          backend: {                                  // <-- configure backend settings\n            loadPath: './locales/{{lng}}/{{ns}}.json', // <-- XHR settings for where to get the files from\n          },\n          lng : 'es',\n          attributes : ['t','i18n'],\n          fallbackLng : 'en',\n          debug : false\n        });\n      });\n    ```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sigmaframeworks/sigma-ui-framework.git"
  },
  "typings": "dist/typings/sigma-ui-framework.d.ts",
  "version": "1.0.0-beta.23"
}
