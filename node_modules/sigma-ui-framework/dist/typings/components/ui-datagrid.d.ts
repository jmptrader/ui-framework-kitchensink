import { BindingEngine } from "aurelia-framework";
import { BindingSignaler } from "aurelia-templating-resources";
export declare class UIDataGrid {
    element: Element;
    signaler: BindingSignaler;
    bindingEngine: BindingEngine;
    static __id: number;
    private __id;
    private __data;
    private __table;
    private __tableWidth;
    private __ghost;
    private __indicator;
    private __wrapper;
    private __focusRow;
    private __isProcessing;
    private columns;
    private __sortColumn;
    private __sortOrder;
    defaultSort: string;
    defaultOrder: string;
    dataList: any[];
    summaryRow: boolean;
    useVirtual: boolean;
    emptyText: string;
    colChilds: any[];
    private allowSelect;
    private __dataListChangeSubscriber;
    constructor(element: Element, signaler: BindingSignaler, bindingEngine: BindingEngine);
    bind(): void;
    unbind(): void;
    attached(): void;
    colChildsChanged(newValue: any): void;
    dataListChanged(newValue: any): void;
    isLastLocked(locked: any, index: any): boolean;
    linkClicked($event: any, col: any, model: any): boolean;
    menuClicked($event: any, col: any, model: any): boolean;
    rowSelect(model: any): boolean;
    sort($event: any, column: any): void;
    summary(column: any): string;
    buildButton(value: any, column: any, model: any): string;
    format(value: any, column: any, model: any): string;
    private __doSort(data);
    private __isResizing;
    private __startX;
    private __diff;
    private __index;
    private __column;
    private __move;
    private __stop;
    resizeStart($event: any): void;
    resize($event: any): void;
    resizeEnd($event: any): void;
}
export declare class UIDataColumn {
    element: Element;
    dataId: string;
    dataSort: string;
    format: string;
    symbol: string;
    summary: string;
    labels: any;
    value: any;
    button: any;
    display: any;
    buttonTitle: string;
    buttonIcon: string;
    buttonTheme: string;
    buttonMenu: Array<any>;
    class: string;
    width: number;
    minWidth: number;
    private edge;
    private __title;
    private __type;
    private __align;
    private __link;
    private __button;
    private __locked;
    private __sortable;
    private __resizeable;
    __hasMenu: boolean;
    constructor(element: Element);
    bind(): void;
    attached(): void;
}
export declare class UIPager {
    element: Element;
    current: number;
    total: number;
    constructor(element: Element);
    currentChanged(newValue: any): void;
    fireChange(n: any): void;
    keyCheck(evt: any): any;
}
export declare class ScrollLeftAttribute {
    element: Element;
    constructor(element: Element);
    valueChanged(newValue: any): void;
}
